basePath: /
definitions:
  dependencymodel.BpmnResource:
    properties:
      id:
        type: string
    type: object
  dependencymodel.Dependencies:
    properties:
      deployment_id:
        description: from db
        type: string
      devices:
        items:
          $ref: '#/definitions/dependencymodel.DeviceDependency'
        type: array
      events:
        items:
          $ref: '#/definitions/dependencymodel.EventDependency'
        type: array
      owner:
        type: string
    type: object
  dependencymodel.DeviceDependency:
    properties:
      bpmn_resources:
        items:
          $ref: '#/definitions/dependencymodel.BpmnResource'
        type: array
      device_id:
        type: string
      name:
        type: string
    type: object
  dependencymodel.EventDependency:
    properties:
      bpmn_resources:
        items:
          $ref: '#/definitions/dependencymodel.BpmnResource'
        type: array
      event_id:
        type: string
    type: object
  deploymentmodel.ConditionalEvent:
    properties:
      event_id:
        type: string
      qos:
        type: integer
      script:
        type: string
      selection:
        $ref: '#/definitions/deploymentmodel.Selection'
      value_variable:
        type: string
      variables:
        additionalProperties:
          type: string
        type: object
    type: object
  deploymentmodel.Deployment:
    properties:
      description:
        type: string
      diagram:
        $ref: '#/definitions/deploymentmodel.Diagram'
      elements:
        items:
          $ref: '#/definitions/deploymentmodel.Element'
        type: array
      executable:
        type: boolean
      id:
        type: string
      incident_handling:
        $ref: '#/definitions/deploymentmodel.IncidentHandling'
      name:
        type: string
      start_parameter:
        items:
          $ref: '#/definitions/deploymentmodel.ProcessStartParameter'
        type: array
      version:
        type: integer
    type: object
  deploymentmodel.Device:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  deploymentmodel.DeviceGroup:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  deploymentmodel.Diagram:
    properties:
      svg:
        type: string
      xml_deployed:
        type: string
      xml_raw:
        type: string
    type: object
  deploymentmodel.Element:
    properties:
      bpmn_id:
        type: string
      conditional_event:
        $ref: '#/definitions/deploymentmodel.ConditionalEvent'
      group:
        type: string
      message_event:
        $ref: '#/definitions/deploymentmodel.MessageEvent'
      name:
        type: string
      notification:
        $ref: '#/definitions/deploymentmodel.Notification'
      order:
        type: integer
      task:
        $ref: '#/definitions/deploymentmodel.Task'
      time_event:
        $ref: '#/definitions/deploymentmodel.TimeEvent'
    type: object
  deploymentmodel.FilterCriteria:
    properties:
      aspect_id:
        type: string
      characteristic_id:
        description: 'TODO: remove?'
        type: string
      device_class_id:
        type: string
      function_id:
        type: string
    type: object
  deploymentmodel.GenericEventSource:
    properties:
      filter_ids:
        type: string
      filter_type:
        type: string
      topic:
        type: string
    type: object
  deploymentmodel.IncidentHandling:
    properties:
      notify:
        type: boolean
      restart:
        type: boolean
    type: object
  deploymentmodel.MessageEvent:
    properties:
      event_id:
        type: string
      flow_id:
        type: string
      selection:
        $ref: '#/definitions/deploymentmodel.Selection'
      use_marshaller:
        type: boolean
      value:
        type: string
    type: object
  deploymentmodel.Notification:
    properties:
      message:
        type: string
      title:
        type: string
    type: object
  deploymentmodel.ProcessStartParameter:
    properties:
      default:
        type: string
      id:
        type: string
      label:
        type: string
      properties:
        additionalProperties:
          type: string
        type: object
      type:
        type: string
    type: object
  deploymentmodel.Selection:
    properties:
      filter_criteria:
        $ref: '#/definitions/deploymentmodel.FilterCriteria'
      selected_device_group_id:
        type: string
      selected_device_id:
        type: string
      selected_generic_event_source:
        $ref: '#/definitions/deploymentmodel.GenericEventSource'
      selected_import_id:
        type: string
      selected_path:
        $ref: '#/definitions/deviceselectionmodel.PathOption'
      selected_service_id:
        type: string
      selection_options:
        items:
          $ref: '#/definitions/deploymentmodel.SelectionOption'
        type: array
    type: object
  deploymentmodel.SelectionOption:
    properties:
      device:
        $ref: '#/definitions/deploymentmodel.Device'
      device_group:
        $ref: '#/definitions/deploymentmodel.DeviceGroup'
      import:
        $ref: '#/definitions/importmodel.Import'
      importType:
        $ref: '#/definitions/importmodel.ImportType'
      path_options:
        additionalProperties:
          items:
            $ref: '#/definitions/deviceselectionmodel.PathOption'
          type: array
        type: object
      services:
        items:
          $ref: '#/definitions/deploymentmodel.Service'
        type: array
    type: object
  deploymentmodel.Service:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  deploymentmodel.Task:
    properties:
      parameter:
        additionalProperties:
          type: string
        type: object
      prefer_event:
        type: boolean
      retries:
        type: integer
      selection:
        $ref: '#/definitions/deploymentmodel.Selection'
    type: object
  deploymentmodel.TimeEvent:
    properties:
      time:
        type: string
      type:
        type: string
    type: object
  devicemodel.AspectNode:
    properties:
      ancestor_ids:
        items:
          type: string
        type: array
      child_ids:
        items:
          type: string
        type: array
      descendent_ids:
        items:
          type: string
        type: array
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
      root_id:
        type: string
    type: object
  deviceselectionmodel.Configurable:
    properties:
      aspect_node:
        $ref: '#/definitions/devicemodel.AspectNode'
      characteristic_id:
        type: string
      function_id:
        type: string
      path:
        type: string
      type:
        type: string
      value: {}
    type: object
  deviceselectionmodel.PathOption:
    properties:
      aspectNode:
        $ref: '#/definitions/devicemodel.AspectNode'
      characteristicId:
        type: string
      configurables:
        items:
          $ref: '#/definitions/deviceselectionmodel.Configurable'
        type: array
      functionId:
        type: string
      isVoid:
        type: boolean
      path:
        type: string
      type:
        type: string
      value: {}
    type: object
  importmodel.Import:
    properties:
      configs:
        items:
          $ref: '#/definitions/importmodel.ImportConfig'
        type: array
      id:
        type: string
      image:
        type: string
      import_type_id:
        type: string
      kafka_topic:
        type: string
      name:
        type: string
      restart:
        type: boolean
    type: object
  importmodel.ImportConfig:
    properties:
      name:
        type: string
      value: {}
    type: object
  importmodel.ImportContentVariable:
    properties:
      aspect_id:
        type: string
      characteristic_id:
        type: string
      function_id:
        type: string
      name:
        type: string
      sub_content_variables:
        items:
          $ref: '#/definitions/importmodel.ImportContentVariable'
        type: array
      type:
        type: string
      use_as_tag:
        type: boolean
    type: object
  importmodel.ImportType:
    properties:
      configs:
        items:
          $ref: '#/definitions/importmodel.ImportConfig'
        type: array
      default_restart:
        type: boolean
      description:
        type: string
      id:
        type: string
      image:
        type: string
      name:
        type: string
      output:
        $ref: '#/definitions/importmodel.ImportContentVariable'
      owner:
        type: string
    type: object
  messages.PrepareRequest:
    properties:
      svg:
        type: string
      xml:
        type: string
    type: object
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Process-Deployment API
  version: "0.1"
paths:
  /dependencies:
    get:
      description: list dependencies
      parameters:
      - description: default 100, will be ignored if 'ids' is set
        in: query
        name: limit
        type: integer
      - description: default 0, will be ignored if 'ids' is set
        in: query
        name: offset
        type: integer
      - description: filter; ignores limit/offset; comma-seperated list
        in: query
        name: ids
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dependencymodel.Dependencies'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: list dependencies
      tags:
      - dependencies
  /dependencies/{id}:
    get:
      description: get dependencies of deployment
      parameters:
      - description: deployment id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dependencymodel.Dependencies'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: get dependencies
      tags:
      - dependencies
  /v3/deployments:
    get:
      description: list process deployments
      parameters:
      - description: default unlimited
        in: query
        name: limit
        type: integer
      - description: default 0
        in: query
        name: offset
        type: integer
      - description: default name.asc
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/deploymentmodel.Deployment'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: list process deployments
      tags:
      - deployment
    post:
      description: deploy process
      parameters:
      - description: source of deployment (e.g. smart-service)
        in: query
        name: source
        type: string
      - description: set to true to disable validation, that a service must be selected
        in: query
        name: optional_service_selection
        type: integer
      - description: process deployment
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/deploymentmodel.Deployment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/deploymentmodel.Deployment'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deploy process
      tags:
      - deployment
  /v3/deployments/{id}:
    delete:
      description: delete process deployment
      parameters:
      - description: deployment id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: delete process deployment
      tags:
      - deployment
    get:
      description: get process deployment
      parameters:
      - description: deployment id
        in: path
        name: id
        required: true
        type: string
      - description: default true, omit SelectionOptions if set to false
        in: query
        name: with_options
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/deploymentmodel.Deployment'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: get process deployment
      tags:
      - deployment
    put:
      description: update process deployment
      parameters:
      - description: deployment id
        in: path
        name: id
        required: true
        type: string
      - description: source of deployment (e.g. smart-service)
        in: query
        name: source
        type: string
      - description: set to true to disable validation, that a service must be selected
        in: query
        name: optional_service_selection
        type: integer
      - description: process deployment
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/deploymentmodel.Deployment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/deploymentmodel.Deployment'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: update process deployment
      tags:
      - deployment
  /v3/prepared-deployments:
    post:
      description: prepare process deployment
      parameters:
      - description: default true, omit SelectionOptions if set to false
        in: query
        name: with_options
        type: boolean
      - description: model that should be prepared for deployment
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/messages.PrepareRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/deploymentmodel.Deployment'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: prepare process deployment
      tags:
      - deployment
  /v3/prepared-deployments/{modelId}:
    get:
      description: prepare process deployment with model-id
      parameters:
      - description: process-model id
        in: path
        name: modelId
        required: true
        type: string
      - description: default true, omit SelectionOptions if set to false
        in: query
        name: with_options
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/deploymentmodel.Deployment'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: prepare process deployment with model-id
      tags:
      - deployment
  /v3/start-parameters/{modelId}:
    get:
      description: get start-parameters of a process-model
      parameters:
      - description: process-model id
        in: path
        name: modelId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/deploymentmodel.ProcessStartParameter'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: get start-parameters
      tags:
      - deployment
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
